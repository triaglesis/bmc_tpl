{
    "scope": "source.tplpre",

    "completions": [
        { "trigger": "getNodeIp \tSearchFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}getNodeIp(host, ${1:rel_host_address_domain}); // -> node_ip" },
        { "trigger": "getHostingNodes \tSearchFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}getHostingNodes(host, ${1:node_address}, balancer_port := ${2:none}); // -> hosting_nodes, nodes_type" },
        { "trigger": "getSI \tSearchFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}getSI(${1:related_node}, ${2:si_types_raw}); // -> related_si" },
        { "trigger": "identifyHostWithUuid \tSearchFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}identifyHostWithUuid(${1:uuid}); // -> searched_host" },
        { "trigger": "relatedSisSearchOnMultipleHosts \tSearchFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}relatedSisSearchOnMultipleHosts(host, rel_host_addresses = ${1:rel_host_addresses}, rel_si_type = ${2:rel_si_type}); // -> related_sis" },

        { "trigger": "getSoftwareNodes \tSearchNodesFull", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}getSoftwareNodes(host,\n\t\t\t\t\t\t\t\t node_address           := ${1:none},\n\t\t\t\t\t\t\t\t software_type          := ${2:none},\n\t\t\t\t\t\t\t\t balancer_port          := ${3:none},\n\t\t\t\t\t\t\t\t port                   := ${4:none},\n\t\t\t\t\t\t\t\t instance               := ${5:none},\n\t\t\t\t\t\t\t\t listen_tcp_socket      := ${6:none},\n\t\t\t\t\t\t\t\t server_name            := ${7:none},\n\t\t\t\t\t\t\t\t installed_product      := ${8:none},\n\t\t\t\t\t\t\t\t db_name                := ${9:none},\n\t\t\t\t\t\t\t\t net_service_name       := ${10:none},\n\t\t\t\t\t\t\t\t ora_service_name       := ${11:none},\n\t\t\t\t\t\t\t\t db2_copy_name          := ${12:none},\n\t\t\t\t\t\t\t\t dsn_name               := ${13:none},\n\t\t\t\t\t\t\t\t jdbc_url               := ${14:none},\n\t\t\t\t\t\t\t\t tnsnames_file_location := ${15:none},\n\t\t\t\t\t\t\t\t get_remote_nodes_only  := ${16:none}\n\t\t\t\t\t\t\t\t); // -> software_nodes\n" },

        { "trigger": "getSoftwareNodes \t_jdbc_url", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}getSoftwareNodes(host, jdbc_url=${2:jdbc_url});\n" },
        { "trigger": "getSoftwareNodes \t_jdbc_search", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}getSoftwareNodes(host, jdbc_url=${2:jdbc_url});\n" },

        { "trigger": "getSoftwareNodes \tSearchDatabase", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}getSoftwareNodes(host,\n\t\t\t\t\t\t\t\t node_address  := ${1:db_host},\n\t\t\t\t\t\t\t\t software_type := \"${2:db_type}\",\n\t\t\t\t\t\t\t\t db_name       := ${3:db_name}\n\t\t\t\t\t\t\t\t);\n" },
        { "trigger": "getSoftwareNodes \tSearchDB+port", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}getSoftwareNodes(host,\n\t\t\t\t\t\t\t\t node_address  := ${1:db_host},\n\t\t\t\t\t\t\t\t software_type := ${2:db_type},\n\t\t\t\t\t\t\t\t port          := ${3:port},\n\t\t\t\t\t\t\t\t instance      := ${4:instance},\n\t\t\t\t\t\t\t\t db_name       := ${5:db_name}\n\t\t\t\t\t\t\t\t);" },
        { "trigger": "getSoftwareNodes \tSearchNodeonLB", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:SearchFunctions\\.)/}getSoftwareNodes(host,\n\t\t\t\t\t\t\t\t node_address  := ${1:db_host},\n\t\t\t\t\t\t\t\t balancer_port := ${2:none}\n\t\t\t\t\t\t\t\t);\n" }
    ]
}
