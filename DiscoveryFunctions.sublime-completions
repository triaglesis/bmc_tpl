{
    "scope": "source.tplpre",

    "completions": [
        { "trigger": "pathNormalization \tDiscoveryFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:DiscoveryFunctions\\.)/}pathNormalization(${1:host}, ${2:install_root});" },
        { "trigger": "getCleanedupPath \tDiscoveryFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:DiscoveryFunctions\\.)/}getCleanedupPath(${1:path}, ${2:os});" },
        { "trigger": "getMaxVersion \tDiscoveryFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:DiscoveryFunctions\\.)/}getMaxVersion(${1:ver1}, ${2:ver2});" },
        { "trigger": "getExeCwdPath \tDiscoveryFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:DiscoveryFunctions\\.)/}getExeCwdPath(${1:process}, ${2:expected_binary_name});" },
        { "trigger": "sortList \tDiscoveryFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:DiscoveryFunctions\\.)/}sortList(${1:list});" },
        { "trigger": "runActiveCommand \tDiscoveryFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:DiscoveryFunctions\\.)/}runActiveCommand(${1:host}, ${2:command_line}, expected_content_regex := ${3:none}, priv_cmd := ${4:none});" },
        { "trigger": "locateCommands \tDiscoveryFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:DiscoveryFunctions\\.)/}locateCommands(${1:host}, ${2:command_list});" },
        { "trigger": "checkCommandList \tDiscoveryFunctions", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:DiscoveryFunctions\\.)/}checkCommandList(${1:host}, ${2:command_list});" }

    ]
}