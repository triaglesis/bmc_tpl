{
    "scope": "source.tplpre",

    "completions": [
        { "trigger": "model.host \tmodel.host", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}host(${1:process});" },
        { "trigger": "model.hosts \tmodel.hosts", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}hosts(${1:model_sis});" },
        { "trigger": "model.destroy \tmodel.destroy", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}destroy(${1:dummy});" },
        { "trigger": "model.kind \tmodel.kind", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}kind(${1:hosting_node});" },
        { "trigger": "model.findPackages \tmodel.findPackages", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}findPackages(host, [regex \"${1:}\"]);" },
        { "trigger": "model.withdraw \tmodel.withdraw", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}withdraw(si_node, \"${1:detail}\");" },

        { "trigger": "addContainment \tmodel.addContainment", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}addContainment(${1:si_node}, ${2:software_components});" },
        { "trigger": "addDisplayAttribute \tmodel.addDisplayAttribute", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}addDisplayAttribute(${1:wls_si}, ${2:tw_meta_data_attr});" },
        { "trigger": "removeDisplayAttribute \tmodel.removeDisplayAttribute", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}removeDisplayAttribute(${1:wls_si}, ${2:tw_meta_data_attr});" },
        { "trigger": "setContainment \tmodel.setContainment", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}setContainment(${1:cluster_si_node}, ${2:related_sis});" },
        { "trigger": "setRemovalGroup \tmodel.setRemovalGroup", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}setRemovalGroup(${1:cluster_si}, \"${2:Dummy_Server_Cluster}\");" },
        { "trigger": "anchorRemovalGroup \tmodel.anchorRemovalGroup", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}anchorRemovalGroup(${1:si}, \"${2:license_dts}\");" },
        { "trigger": "suppressRemovalGroup \tmodel.suppressRemovalGroup", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}suppressRemovalGroup(\"%${1:detail_type}%\");" },

        { "trigger": "Communication \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.Communication(Server := ${1:related_sis}, Client := ${2:si_node});" },
        { "trigger": "Containment \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.Containment(Contained := ${1:cluster_member_node}, Container := ${2:cluster});" },
        { "trigger": "Dependency \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.Dependency(Dependant := ${1:si_node}, DependedUpon := ${2:dep_si});" },
        { "trigger": "Detail \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.Detail(ElementWithDetail := ${1:si_node}, Detail := ${2:details});" },
        { "trigger": "HostContainment \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.HostContainment(HostContainer := ${1:si_node}, ContainedHost := ${2:host});" },
        { "trigger": "HostedFile \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.HostedFile(HostedFile := ${1:file}, Host := ${2:host});" },
        { "trigger": "HostedSoftware \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.HostedSoftware(Host := ${1:host}, RunningSoftware := ${2:si_node});" },
        { "trigger": "Management \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.Management(Manager := ${1:manager_si}, ManagedElement := ${2:si_node});" },
        { "trigger": "RelatedFile \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.RelatedFile(ElementUsingFile := ${1:si_node}, File := ${2:file});" },
        { "trigger": "SoftwareService \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.SoftwareService(ServiceProvider := ${1:si_node}, Service := ${2:cluster});" },
        { "trigger": "SoftwareContainment \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.SoftwareContainment(SoftwareContainer := ${1:si_node}, ContainedSoftware := ${2:sc_lst});" },
        { "trigger": "StorageUse \trel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}rel.StorageUse(Consumer := ${1:virtual_disk}, Provider := ${2:dest_disks});" },

        { "trigger": "Communication \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.Communication(Server := ${1:related_sis}, Client := ${2:si_node});" },
        { "trigger": "Containment \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.Containment(Contained := ${1:cluster_member_node}, Container := ${2:cluster});" },
        { "trigger": "Dependency \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.Dependency(Dependant := ${1:si_node}, DependedUpon := ${2:dep_si});" },
        { "trigger": "Detail \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.Detail(ElementWithDetail := ${1:si_node}, Detail := ${2:details});" },
        { "trigger": "HostContainment \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.HostContainment(HostContainer := ${1:si_node}, ContainedHost := ${2:host});" },
        { "trigger": "HostedFile \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.HostedFile(HostedFile := ${1:file}, Host := ${2:host});" },
        { "trigger": "HostedSoftware \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.HostedSoftware(Host := ${1:host}, RunningSoftware := ${2:si_node});" },
        { "trigger": "HostedService \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.HostedService(ServiceHost := ${1:cluster}, RunningService := ${2:cluster_service_node});" },
        { "trigger": "Management \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.Management(Manager := ${1:manager_si}, ManagedElement := ${2:si_node});" },
        { "trigger": "RelatedFile \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.RelatedFile(ElementUsingFile := ${1:si_node}, File := ${2:file});" },
        { "trigger": "SoftwareService \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.SoftwareService(ServiceProvider := ${1:si_node}, Service := ${2:cluster});" },
        { "trigger": "SoftwareContainment \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.SoftwareContainment(SoftwareContainer := ${1:si_node}, ContainedSoftware := ${2:sc_lst});" },
        { "trigger": "StorageUse \tuniquerel", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.StorageUse(Consumer := ${1:virtual_disk}, Provider := ${2:dest_disks});" },

// Customization:
        { "trigger": "SoftwareInstance \tShort", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}SoftwareInstance(key := key,\n\t$0name := name,\n\t$0short_name := short_name\n\t);" },
        { "trigger": "SoftwareInstance \tKey", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}SoftwareInstance(key             := \"%port%/%key_si_type%/%host.key%\",\n$0\t\t\t\t\t   name            := name,\n$0\t\t\t\t\t   short_name      := short_name,\n$0\t\t\t\t\t   version         := full_version,\n$0\t\t\t\t\t   product_version := product_version,\n$0\t\t\t\t\t   port            := port,\n$0\t\t\t\t\t   listening_ports := listening_ports,\n$0\t\t\t\t\t   type            := si_type\n$0\t\t\t\t\t   );\n" },
        { "trigger": "SoftwareInstance \tKey_group", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}SoftwareInstance(key             := \"%port%/%key_si_type%/%host.key%\",\n$0\t\t\t\t\t   name            := name,\n$0\t\t\t\t\t   short_name      := short_name,\n$0\t\t\t\t\t   version         := full_version,\n$0\t\t\t\t\t   product_version := product_version,\n$0\t\t\t\t\t   port            := port,\n$0\t\t\t\t\t   listening_ports := listening_ports,\n$0\t\t\t\t\t   type            := si_type\n$0\t\t\t\t\t   );\n" },
        { "trigger": "SoftwareInstance \tDetailed", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}SoftwareInstance(key              := \"%product_version%/%si_type%/%host.key%\",\n$0\t\t\t\t\t\t   name             := name,\n$0\t\t\t\t\t\t   short_name       := short_name,\n$0\t\t\t\t\t\t   version          := full_version,\n$0\t\t\t\t\t\t   product_version  := product_version,\n$0\t\t\t\t\t\t   publisher        := publisher,\n$0\t\t\t\t\t\t   product          := product,\n$0\t\t\t\t\t\t   type             := si_type\n$0\t\t\t\t\t\t  );\n" },

        { "trigger": "Communication type \tmodel.uniquerel.", "contents": "${TM_CURRENT_WORD/\\.\\W*|(.*)/(?1:model\\.)/}uniquerel.Communication(Server := ${1:related_sis}, Client := ${2:si_node}, type := \"${3:%type%}\");" }
    ]
}
